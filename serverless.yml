service: acronym

app: acronym
tenant: kevinvoduy

custom:
  dynamodb:
    start:
      port: 8002
      inMemory: true
      migrate: true
      seed: true
  serverless-offline:
    babelOptions:
      presets: ["es2015", "stage-3"]


plugins:
  - serverless-dynamodb-local
  - serverless-offline #needs to be last in the list

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: "user-table"

functions:
  createUser:
    handler: handlers/create.user
    events:
      - http: "POST /users"
  getUser:
    handler: handlers/getUser.byId
    events:
      - http: "GET /users/{id}"

  addItemToCart:
    handler: handlers/addtoCart.addItem
    events:
      - http: "PUT /users/{id}"

resources:
  Resources:
    UserTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "userId"
            AttributeType: "S"
          -
            AttributeName: "cart"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "userId"
            KeyType: "HASH"
          -
            AttributeName: "cart"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "user-table"
